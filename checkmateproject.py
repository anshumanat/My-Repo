# -*- coding: utf-8 -*-
"""CheckmateProject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OxqtiV4ozQLDKkzHVQtxu7kGg8OyCGRI
"""

!pip install -q -U google-generativeai # Installing Gemini AI for use with API

# Google Gemini AI (API)
import google.generativeai as genai

# File management
import os

# Ff we call urls
import requests

# Handle images
from IPython.display import Image

# Use this if you set the environment variable for the api key: (preferred route when not using notebook)
# genai.configure(api_key=os.environ["API_KEY"])

# If using File From Colab Notebook Directly, use stored API key
from google.colab import userdata
api=userdata.get('My_First_Project')

# Initializing your key for use
genai.configure(api_key=api)

model = genai.GenerativeModel('models/gemini-1.5-pro-001')

from google.colab import files
import os

# Prompt the user to upload multiple files
print("Please upload your images (you can select multiple files):")
uploaded = files.upload()

# Create a directory to store the uploaded images
os.makedirs('uploaded_images', exist_ok=True)

# Save each uploaded file in the directory
for filename, data in uploaded.items():
    file_path = os.path.join('uploaded_images', filename)
    with open(file_path, 'wb') as f:
        f.write(data)
    print(f"Saved {filename} to 'uploaded_images/'")

# Confirm the process is complete
print("\nUpload and saving process is complete.")
print(f"Uploaded {len(uploaded)} images, saved in the 'uploaded_images' directory.")

# This is an image I used, you will need to put your image here
img_=Image('Cheque1_page1_img1.jpg') # my file for example

# This is another model we can use, I will use here
model = genai.GenerativeModel('gemini-1.5-pro-001')

# Text prompt for Gemini AI
prompt='analyze and extract all information from image, including Payee Name,Bank Name, Account Number,Date,cheque Number,Amount and all other information'

#Gemini takes our img, prompt and generate a response string from it
result=model.generate_content([img_,prompt])


# Output text
print(result.text)

